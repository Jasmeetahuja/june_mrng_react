Java => tomcat/apache
.Net =>iSS
PhP => Xamp
Javascript Frameworks => NodeJs



>>>>>>>Package.json<<<<<<<<<<
> entrypoint
> description
> packages
> versions


json
{
    {
        name:'abc',
        class:'UI'
    },
    {
        name:'def',
        class:'AI'
    }
}


>>>>Steps to build package.json<<<<
Step1 => Navigate the folder using cmd/terminal
Step2 => initializing the things
      npm init
Step3 => Answer all the questions
Step4 => type yes


>>>>>Installing Packages<<<<
1 Local packages => local to the folder
2 Global packages => local to the system

>>>>Local Packages<<<
Installing local packages
Step1 => navigate to folder
Step2=> npm install <package name>/npm i <package name>


>>>>Global Packages<<<
the packages that helps to start app, create app, monitor app and build app
Installing Global Packages
Step1 => navigate to the folder
Step2 => npm i -g



>>>>Components<<<<<
1=> Class based components
2=> Funtional components


>>>>Function in ES5<<<<
 function add(a,b){
     return a+b
 
 }
 add(2,4)


 >>>>>Function in ES6<<<<

 var add = ()=>{return a+b}
 add(3,4)



 let and const


 var a ///declaration
 a = 10 /// assignment


 var=> you can redeclare & reassign
 let=> can't redeclare & reassign
 const=> neither redeclare nor reassign


 <React.Fragement>



 >>>>>>>>State & Props<<<<<<<<<


 A      ------Props------  B
 State                     State



 >>>>>Ternary Operator<<<<<
 var a = 10
undefined
a>10 ? "ok":"not ok"
"not ok"
a==10? "ok":"not ok"
"ok"



>>>>>IN ES5<<<<<<<
var a= [1,2,3,4]
undefined
a[0]
1
a[1]
2
for(i=0;i<a.length;i++){console.log(a[i])}
VM214:1 1
VM214:1 2
VM214:1 3
VM214:1 4
undefi


>>>> IN ES6 <<<<<
var a= [1,2,3,4]
undefined
a.map((data)=>{return data})
(4) [1, 2, 3, 4]0: 11: 22: 33: 4length: 4__proto__: Array(0)
a.map((data)=>{console.log(data)})
VM344:1 1
VM344:1 2
VM344:1 3
VM344:1 4
(4) [undefined, undefined, undefined, undefined]




<a href ="abc.com"> Click </a>


===> <NewsList newsdata ={this.state.news}/>
Sending state"news" with props "newsdata" to component "NewsList"


>>>>>Filtering in ES6<<<<<<<
var a= [1,2,3,4]
undefined
a.map((data) => {return(data*1)})
(4) [1, 2, 3, 4]0: 11: 22: 33: 4length: 4__proto__: Array(0)
a.filter((data) => {return(data*1)})
(4) [1, 2, 3, 4]0: 11: 22: 33: 4length: 4__proto__: Array(0)
var a =[0,1,2,3]
undefined
a.filter((data) => {return(data*1)})
(3) [1, 2, 3]
a.map((data) => {return(data*1)})
(4) [0, 1, 2, 3]
0==true
false
0==false
true


>>>> Condition for filter<<<<<

var ages = [32, 33, 16, 40];
ages.filter((age) => { return age>=18;})



***From Parent to child
=> simple props
*** child to Parent
=> props with function




For next Application
step1=> create-react-app secondapp
 after this 
step2=> npm i react-router-dom 


>>>>Read Bootstrap<<<<<
Grid Basic
Button
Panel
Navbar


>>>.Fake API<<<<<
npm install -g json-server

json-server --watch db.json --port 8900


******Redux****
=> View
=> Action 
=>Reducer 
=> Store

View=> Action=> Reducers => Store => View

=> npm i redux react-redux